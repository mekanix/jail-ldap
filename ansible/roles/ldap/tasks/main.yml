---
- name: install packages
  with_items: "{{ ldap_packages }}"
  pkgng:
    name: "{{ item.name }}"
  notify:
    - restart ldap

- name: enable slapd service
  template:
    src: slapd.j2
    dest: /etc/rc.conf.d/slapd
  notify:
    - restart ldap

- name: create cert dir
  file:
    path: /usr/local/etc/openldap/certs
    state: directory
    mode: 0700
    owner: ldap
    group: ldap

- name: install cert updater
  copy:
    src: update_certs.sh
    dest: /usr/local/bin/update_certs.sh
    mode: 0755

- name: convert cert from letsencrypt
  command: /usr/local/bin/update_certs.sh "{{ ldap_domain }}"
  args:
    creates: "/usr/local/etc/openldap/certs/privkey.pem"
  notify:
    - restart ldap

- name: keep the config
  file:
    path: /var/db/openldap-data/.keep
    state: directory

- name: install opendkim schema
  template:
    src: opendkim.schema.j2
    dest: /usr/local/etc/openldap/schema/opendkim.schema
  notify:
    - restart ldap

- name: get hostname
  shell: hostname
  register: hostname_result

- name: configure ldap server
  with_items: "{{ ldap_templates }}"
  template:
    src: "{{ item.filename }}.tpl"
    dest: "{{ item.destination }}/{{ item.filename }}"
  notify:
    - restart ldap

- name: check if slapd-secret.conf exists
  stat:
    path: /usr/local/etc/openldap/slapd-secret.conf
  register: secret_result

- name: create slapd-secret.conf if it does not exists
  template:
    src: slapd-secret.conf.j2
    dest: /usr/local/etc/openldap/slapd-secret.conf
    mode: 0600
    owner: ldap
    group: ldap
  when: secret_result.stat.exists == False
  notify:
    - restart ldap

- name: check if slapd-multimaster.conf exists
  stat:
    path: /usr/local/etc/openldap/slapd-multimaster.conf
  register: multimaster_result

- name: generate random rid
  set_fact:
    rid: "{{ 100 | random }}"
  when: rid is not defined

- name: create slapd-multimaster.conf if it does not exists
  template:
    src: slapd-multimaster.conf.j2
    dest: /usr/local/etc/openldap/slapd-multimaster.conf
    mode: 0600
    owner: ldap
    group: ldap
  when: multimaster_result.stat.exists == False
  notify:
    - restart ldap

- name: ensure slapd.d exists
  file:
    name: "/usr/local/etc/openldap/slapd.d"
    state: directory
    owner: ldap
    group: ldap
  notify:
    - generate slapd.d
    - restart ldap
